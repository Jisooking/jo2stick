안녕하세요 1조 일단하조에서 발표를 맡게 된 김지수라고 합니다.

일단 뒤집어조! 왜 게임 이름이 일단 뒤집어조!일까요?

뒤집어지게 재미있어서 그런 것뿐만은 아닙니다!

카드뿐 아니라 다양한 UI들도 뒤집어지는 일단 뒤집어조!

목차부터 살펴보면서 설명해 드리겠습니다

이 게임의 중요한 특징으로는 카드 연출, 게임 연출, 다양한 모드 구현이

있는데요 그 부분을 집중해서 따라와 주시면 더욱 재미있을 것 같습니다.

먼저 게임 영상을 한번 보여드리겠습니다.

(영상 시연)

카드 연출 기능부터 다시 보면서 코드에 대해 살펴보겠습니다.

(펼쳐지는 영상 보여 주고, 2~3번 재생되었을 때 넘기기)

(코드 장면 보여주고, 설명하기 너무 자세히 x, 전체적인 흐름)

코드를 보시면 

카드가 중앙에서 생성되고, 펼쳐지는 연출을 보여주기 위해

(생성된)카드 오브젝트(카드 프리팹)를 담은 배열을 만들어서 할당해 주었습니다.

다음은 카드 뒤집기 애니메이션 입니다.

기존 게임인 FindRtan 과는 다르게

너무 빠르게 카드를 뒤집어 지는 것을 방지하고,

뒤집기 애니메이션에서 카드가 정확히 반쯤 

뒤집혀졌을 때  앞뒤가 바뀌는 연출을 주기 위해서

코루틴을 사용했습니다

이미지 추가에서는, 앞면에는 저희 팀원들의 사진을 추가하고,

뒷면에는 게임 난이도에 맞는 그림을 삽입해 봤습니다.

다음은 게임 연출입니다.

(연출 설명할 때 Gif 일시 정지 후, 간단한 설명 하고 플레이)

시간의 흐름을 게임매니저 업데이트 에서 관리하고 있고,

남은시간이 10초 이하가 되면 오디오매니저를 호출하여 

긴박한 느낌의 BGM으로 변경됩니다.

게임 클리어 함수가 실행되면, 게임 모드 난이도에 따라 

다른 난이도가 해금될 수 있도록 구현했습니다.

UI연출에서는 뒤집어지는 연출을 구현해 봤습니다.

가장 많이 고민한 부분은 UI 이미지들끼리의 충돌 감지 였는데요

UI 이미지는 콜라이더를 사용할 수 없어서, 태그를 사용해서

오브젝트를 찾아낸 후, 해당 함수를 사용해서 렉트 트랜스폼끼리

겹쳐지는지 확인한 다음에 히든스테이지로 가는 함수를 호출했습니다.

드래그가 끝나면 코루틴을 사용해서 원래의자리로(이미지가) 돌아가게 구현했습니다

저희가 구현한 특별한 모드는 좀비모드, 무한모드, 히든모드 입니다.

모드들을 enum-switch를 사용해서 분류및 활용을 용이하게 했습니다.

게임이 실행될때, 모드에따라 기능을 추가하거나 제거했습니다.

지금부터 게임을 제작할 때 겪엇던 문제들에 대해 얘기해보고

어떻게 해결하였는지 얘기해보겠습니다.

다들 그러셨겠지만, 저희 또한 게임을 제작하며 많은 문제가 있었습니다.

그 중 인상깊었던것들을 몇 개 살펴보고 어떻게 해결했는지 설명해 보겠습니다.

첫번째는 배치문제입니다 , ~해서 ~ 이렇게 해결했습니다.

다음으로 조작 문제는 ~이렇게 해결했습니다.

(카드 연출 중 딜레이, 딜레이중에 또다른 카드클릭시 카드가 뒤집어지는 버그발생,

게임매니저에 캔셀렉트카드 메서드를 만들어서 카드 클릭가능여부 체크,

이후 카드 플립 매서드 실행)

모드문제는 ~ 문제가 있었고

간단하게 카드카운트를 초기화하는 방식으로 해결했습니다.

개인적으로 가장 힘들었던 부분은 Git허브였습니다.

처음 사용하는 툴이기도 하고, 여러 명의 작업물을 병합하는 과정에서

사용이 미숙하기 때문에 발생한 문제들이 더러 있었습니다.

이 부분을 해결하기 위해 튜터님을 찾아가서 조언을 구했고,

덕분에 ~~이러한 방법(Git Flow)으로 문제를 해결할 수 있었습니다.

자랑스러운 저희 팀원분들 소감을 읽어보며 발표를 마치겠습니다. 이상입니다.

궁금하신 점이 있으시다면 편하게 질문해 주시면 감사하겠습니다.


